from flask import Flask
import random
import os

app = Flask(__name__)

# –û–±—â–∏–π —Å—Ç–∏–ª—å —Å–∞–π—Ç–∞
STYLE = '''
    <style>
        body {
            background-color: #e0f7ff;
            font-family: Arial, sans-serif;
            text-align: center;
            padding-top: 50px;
        }
        h1 {
            color: #006699;
        }
        p {
            font-size: 20px;
        }
        a {
            margin: 10px;
            font-size: 18px;
            color: #004466;
            text-decoration: none;
        }
        .counter {
            position: fixed;
            bottom: 10px;
            right: 10px;
            font-size: 14px;
            color: gray;
        }
    </style>
'''

# –§—É–Ω–∫—Ü–∏—è —Å—á—ë—Ç—á–∏–∫–∞
def update_counter():
    filename = "counter.txt"
    if not os.path.exists(filename):
        with open(filename, "w") as f:
            f.write("0")
    with open(filename, "r+") as f:
        count = int(f.read())
        count += 1
        f.seek(0)
        f.write(str(count))
        f.truncate()
    return count

JOKES = [
    "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç ‚Äî —ç—Ç–æ –º–∞—à–∏–Ω–∞ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∫–æ—Ñ–µ –≤ –∫–æ–¥.",
    "–ù–∞ 101% –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –∫–æ—Ñ–µ –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö.",
    "–°–ª–æ–º–∞–ª—Å—è Wi-Fi ‚Äî –ø—Ä–∏—à–ª–æ—Å—å –æ–±—â–∞—Ç—å—Å—è —Å —Å–µ–º—å—ë–π. –û–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è, –º–∏–ª—ã–µ –ª—é–¥–∏!",
    "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –Ω–µ –ø—å—ë—Ç —á–∞–π ‚Äî –æ–Ω –µ–≥–æ –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç.",
    "–ì–æ–≤–æ—Ä—è—Ç, —Å–æ–Ω –ø–æ–ª–µ–∑–µ–Ω‚Ä¶ –Ω–æ –∫–æ–¥ –Ω–æ—á—å—é –ø–∏—à–µ—Çc—è –ª—É—á—à–µ!",
    "–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—É –Ω–µ –Ω—É–∂–Ω—ã –æ—á–∫–∏? –ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –≤—Å–µ–≥–¥–∞ –≤–∏–¥–∏—Ç –±–∞–≥–∏.",
    "–ö–∞–∫ –∑–æ–≤—É—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞, –∫–æ–≥–¥–∞ –æ–Ω –≤ –æ—Ç–ø—É—Å–∫–µ? –†–µ—Å—Ç-–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç.",
    "–°–∫–æ–ª—å–∫–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –≤–∫—Ä—É—Ç–∏—Ç—å –ª–∞–º–ø–æ—á–∫—É? –ù–∏ –æ–¥–Ω–æ–≥–æ ‚Äî —ç—Ç–æ –∞–ø–ø–∞—Ä–∞—Ç–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞!",
    "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –Ω–µ —É—Ö–æ–¥—è—Ç ‚Äî –æ–Ω–∏ –ø—Ä–æ—Å—Ç–æ –≤—ã—Ö–æ–¥—è—Ç –∏–∑ —Ü–∏–∫–ª–∞.",
    "–û—à–∏–±–∫–∞ 404: —à—É—Ç–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.",
    "–†–∞–Ω—å—à–µ —è –¥—É–º–∞–ª, —á—Ç–æ —Ä–µ–∫—É—Ä—Å–∏—è ‚Äî —ç—Ç–æ —Å–ª–æ–∂–Ω–æ. –ê –ø–æ—Ç–æ–º —è –ø–æ–Ω—è–ª, —á—Ç–æ —Ä–µ–∫—É—Ä—Å–∏—è ‚Äî —ç—Ç–æ —Å–ª–æ–∂–Ω–æ.",
    "Git commit -am '–ø–æ—á–∏–Ω–∏–ª –≤—Å—ë'. –ù–∞–¥–µ—é—Å—å, –ø—Ä–∞–≤–¥–∞.",
    "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –∑–∞—Ö–æ–¥–∏—Ç –≤ –±–∞—Ä. –ë–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω. Abort.",
    "–ú–∞–º–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ –≥–æ–≤–æ—Ä–∏—Ç: '–£–±–µ—Ä–∏ –∑–∞ —Å–æ–±–æ–π!' –û–Ω –ø–∏—à–µ—Ç: rm -rf /home/",
    "–ü–æ—á–µ–º—É —É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –±—ã–≤–∞–µ—Ç –ª–∏—á–Ω–æ–π –∂–∏–∑–Ω–∏? –ü–æ—Ç–æ–º—É —á—Ç–æ —É –Ω–µ–≥–æ –≤—Å—ë ‚Äî –ø—É–±–ª–∏—á–Ω–æ–µ.",
    "–†–∞–±–æ—á–∏–π –¥–µ–Ω—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞: –ø–∏—Ç—å –∫–æ—Ñ–µ, –≥—É–≥–ª–∏—Ç—å –æ—à–∏–±–∫–∏, –¥–µ–±–∞–∂–∏—Ç—å –≥—É–≥–ª–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏.",
    "–¢–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫ –∑–∞—Ö–æ–¥–∏—Ç –≤ –±–∞—Ä: –∑–∞–∫–∞–∑—ã–≤–∞–µ—Ç 0 –ø–∏–≤–∞, -1 –ø–∏–≤–∞, 99999999 –ø–∏–≤–∞, –∫–æ—à–∫—É, %$@#.",
    "‚Äî –ü–æ—á–µ–º—É —Ç—ã –ø–ª–∞—á–µ—à—å? ‚Äî –£ –º–µ–Ω—è null pointer exception...",
    "–õ—é–±–æ–≤—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞: if (–ª—é–±–ª—é) {{ –∂–µ–Ω—é—Å—å(); }} else {{ continue; }}",
    "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã —Ç–æ–∂–µ –ª—é–¥–∏. –ü—Ä–æ—Å—Ç–æ —Å—Ç—Ä–∞–Ω–Ω—ã–µ.",
    "–°–∞–º—ã–π —Å—Ç—Ä–∞—à–Ω—ã–π –∑–≤—É–∫ ‚Äî —ç—Ç–æ —Ç–∏—à–∏–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –∫–æ–¥–∞.",
    "–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –ª—é–±—è—Ç —Ç—ë–º–Ω—É—é —Ç–µ–º—É? –ü–æ—Ç–æ–º—É —á—Ç–æ —Å–≤–µ—Ç ‚Äî —ç—Ç–æ –±–∞–≥.",
    "–ö–æ–¥ –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ ‚Äî –∫–∞–∫ –∫–Ω–∏–≥–∞ –±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤: –≤—Ä–æ–¥–µ –∫—Ä–∞—Å–∏–≤–æ, –Ω–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ.",
    "Debug ‚Äî –∫–∞–∫ –æ—Ö–æ—Ç–∞ –Ω–∞ –ø—Ä–∏–∑—Ä–∞–∫–æ–≤: —Ç—ã –∑–Ω–∞–µ—à—å, —á—Ç–æ –æ–Ω–∏ –µ—Å—Ç—å, –Ω–æ –≥–¥–µ?",
    "Ctrl+C, Ctrl+V ‚Äî –≥–ª–∞–≤–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –≥–µ–Ω–∏—è.",
    "–°–∫–∞–∑–∞–ª —Å–µ–±–µ: ¬´–©–∞ 5 –º–∏–Ω—É—Ç –ø–æ—Ñ–∏–∫—Å—é¬ª, ‚Äî –∏ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–µ —É—Ç—Ä–æ –ø—Ä–æ—Å–Ω—É–ª—Å—è –≤ 6:00.",
    "–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –Ω–µ –∏–¥—É—Ç –≤ —Å–ø–æ—Ä—Ç–∑–∞–ª? –ü–æ—Ç–æ–º—É —á—Ç–æ —É –Ω–∏—Ö —É–∂–µ –µ—Å—Ç—å –∫–ª–∞—Å—Å Body.",
    "–ò–¥–µ–∞–ª—å–Ω—ã–π –∫–æ–¥ ‚Äî —ç—Ç–æ –∫–∞–∫ –µ–¥–∏–Ω–æ—Ä–æ–≥: –≤—Å–µ –æ –Ω—ë–º –≥–æ–≤–æ—Ä—è—Ç, –Ω–æ –Ω–∏–∫—Ç–æ –Ω–µ –≤–∏–¥–µ–ª.",
    "–ö–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç? –ù–µ —Ç—Ä–æ–≥–∞–π. –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç? –í—Å—ë —Ä–∞–≤–Ω–æ –Ω–µ —Ç—Ä–æ–≥–∞–π ‚Äî —Å—Ç–∞–Ω–µ—Ç —Ö—É–∂–µ.",
    "–ü–∏—à—É –∫–æ–¥: 10% –º—ã—à–ª–µ–Ω–∏–µ, 90% –±–æ—Ä—å–±–∞ —Å —Å–æ–±–æ–π."
]

@app.route('/random')
def random_joke():
    return random.choice(JOKES)

@app.route('/')
def home():
    count = update_counter()
    return f'''
    <html>
    <head>{STYLE}
    <script>
        async function getJoke() {{
            const response = await fetch('/random');
            const joke = await response.text();
            document.getElementById('joke-text').innerText = joke;
        }}
    </script>
    </head>
    <body>
        <h1>–ê–Ω–µ–∫–¥–æ—Ç –¥–Ω—è</h1>
        <p id="joke-text">–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∞–Ω–µ–∫–¥–æ—Ç!</p>
        <button onclick="getJoke()">–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–µ–∫–¥–æ—Ç</button>
        <br><br>
        <a href="/about">–û –Ω–∞—Å</a> | <a href="/contacts">–ö–æ–Ω—Ç–∞–∫—Ç—ã</a>
        <div class="counter">üëÅÔ∏è –ü–æ—Å–µ—â–µ–Ω–∏—è: {count}</div>
    </body>
    </html>
    '''

@app.route('/about')
def about():
    return f'''
    <html>
    <head>{STYLE}</head>
    <body>
        <h1>–û –ø—Ä–æ–µ–∫—Ç–µ</h1>
        <p>–≠—Ç–æ—Ç —Å–∞–π—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–µ –∞–Ω–µ–∫–¥–æ—Ç—ã, –∞ —Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –Ω–∞–≤—ã–∫–æ–≤ –≤ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –∫–æ–¥–∞ –Ω–∞ Python</p>
        <a href="/">–ì–ª–∞–≤–Ω–∞—è</a> | <a href="/contacts">–ö–æ–Ω—Ç–∞–∫—Ç—ã</a>
    </body>
    </html>
    '''

@app.route('/contacts')
def contacts():
    return '''
    <html>
    <head>
        <style>
            body {
                margin: 0;
                padding: 0;
                background-image: url('/static/me.jpg');
                background-size: cover;
                background-position: center;
                font-family: Arial, sans-serif;
                height: 100vh;
            }
            .overlay {
                background-color: rgba(0, 0, 0, 0.5);
                color: white;
                height: 100%;
                width: 100%;
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
                text-align: center;
                text-shadow: 0 0 5px black;
            }
            a {
                color: #ffcc00;
                text-decoration: none;
                font-size: 18px;
                margin-top: 20px;
            }
        </style>
    </head>
    <body>
        <div class="overlay">
            <h1>–ö–æ–Ω—Ç–∞–∫—Ç—ã</h1>
            <p>–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π –º–æ–∂–Ω–æ –ø–æ –ø–æ—á—Ç–µ: Danila.Isaev.com</p>
            <a href="/">–ù–∞ –≥–ª–∞–≤–Ω—É—é</a> | <a href="/about">–û –Ω–∞—Å</a>
        </div>
    </body>
    </html>
    '''

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port)